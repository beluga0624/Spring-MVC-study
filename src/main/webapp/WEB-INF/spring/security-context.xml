<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	<bean id="customAccessDenied" class="org.fintech.security.CustomAccessDeniedHandler"/>
	<!-- <bean id="customLoginSuccess" class="org.fintech.security.CustomLoginSuccessHandler"/> -->
	<!-- <bean id="customPasswordEncoder" class="org.fintech.security.CustomNoOpPasswordEncoder"/> -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailsService" class="org.fintech.security.CustomUserDetailsService"/>
	<!-- 인증, 권한 허가등의 기능을 하는 태그 -->
	<security:http>
		<!-- url에 접근 허용을 선언하는 태그 03.28 -->
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		
		<!-- ROLE_MEMBER 권한을 가진 사용자만 접근 가능 -->
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
		<!-- 스프링이 제공하는 로그인 폼 -->
		<!-- <security:form-login /> -->
		<security:form-login login-page="/customLogin" />
		
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:logout logout-url="/customLogout" invalidate-session="true"
			delete-cookies="remember-me, JSESSIONID"/>
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
		
	</security:http>
	
	<!-- 인증처리 방법을 선언하는 태그 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
		
			<!-- <security:jdbc-user-service data-source-ref="dataSource"/> -->
			
			<!-- <security:jdbc-user-service data-source-ref="dataSource"
										users-by-username-query="select userid, userpw, enabled 
																 from tbl_member 
																 where userid = ?"
										authorities-by-username-query="select userid, auth 
																	   from tbl_member_auth 
																	   where userid = ?"/> -->
			
			<!-- <security:password-encoder ref="customPasswordEncoder"/> -->
			
			<security:password-encoder ref="bcryptPasswordEncoder"/>

			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN" />
			</security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
